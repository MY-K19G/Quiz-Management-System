# -------------------------------------------------------
# Project: Quiz Management System
# Description: A Spring Boot application for creating, updating, and managing quizzes, with support for dynamic UI and backend integration.
# Author: K19G
# Email: lokmpijn@gmail.com
# Version: 0.0.1
# -------------------------------------------------------

# --------------------------------------
# APPLICATION INFO
# --------------------------------------

# Application Name
spring.application.name=Quiz-Management-System

# --------------------------------------
# SERVER CONFIGURATION
# --------------------------------------

# The port on which the application will run
server.port=8083

# Session timeout duration (30 minutes)
server.servlet.session.timeout=30m

# --------------------------------------
# VIEW CONFIGURATION
# --------------------------------------

# Prefix for JSP view files (location of JSP files within the project)
spring.mvc.view.prefix=/view/

# Suffix for JSP view files (file extension)
spring.mvc.view.suffix=.jsp

# URL matching strategy for path patterns (using Ant-style path patterns)
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# --------------------------------------
# DATABASE CONFIGURATION
# --------------------------------------

# H2 Database URL with file-based storage, ensuring data persistence beyond application restart
spring.datasource.url=jdbc:h2:file:./database/quiz_system_db

# H2 Database driver class
spring.datasource.driverClassName=org.h2.Driver

# H2 Database username and password
spring.datasource.username=k19g
spring.datasource.password=K19G@321

# Hibernate dialect for H2 Database
#Hibernate 5.4 and later versions automatically use the correct dialect without requiring explicit configuration.
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable the H2 console to access and debug the database at the specified path
spring.h2.console.enabled=true
spring.h2.console.path=/h2_database_console

# --------------------------------------
# HIBERNATE CONFIGURATION
# --------------------------------------

# Hibernate property to update the schema automatically based on entity mappings
spring.jpa.hibernate.ddl-auto=update

# Format SQL output for readability
# spring.jpa.properties.hibernate.format_sql=true

# Display SQL queries in the console for tracking database interactions
# spring.jpa.show-sql=true

# Highlight SQL in the logs for easier identification
# spring.jpa.properties.hibernate.highlight_sql=true

# --------------------------------------
# LOGGING CONFIGURATION
# --------------------------------------

# Enable DEBUG logging for Spring's DispatcherServlet to track request handling
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG

# Enable DEBUG logging for Spring Security to troubleshoot security-related issues
logging.level.org.springframework.security=DEBUG

# Enable DEBUG logging for Spring Web to troubleshoot web-related issues
logging.level.org.springframework.web=DEBUG

# --------------------------------------
# ERROR HANDLING CONFIGURATION
# --------------------------------------

# Throw an exception if no handler is found for a request (disables the default 404 error page)
spring.mvc.throw-exception-if-no-handler-found=true

# Disable the default Whitelabel error page
server.error.whitelabel.enabled=false
