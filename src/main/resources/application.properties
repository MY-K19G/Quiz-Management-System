# -------------------------------------------------------
# Project: Quiz Management System
# Description: A Spring Boot application for creating, updating, and managing quizzes, with support for dynamic UI and backend integration.
# Author: K19G
# Email: lokmpijn@gmail.com
# -------------------------------------------------------

# --------------------------------------
# APPLICATION INFO
# --------------------------------------

# Application Name
 spring.application.name=Quiz-Management-System

# --------------------------------------
# SERVER CONFIGURATION
# --------------------------------------

# The port on which the application will run
 server.port=8083

# Session timeout duration (30 minutes)
 server.servlet.session.timeout=1800s

# --------------------------------------
# VIEW CONFIGURATION
# --------------------------------------

# Prefix for JSP view files (location of JSP files within the project)
 spring.mvc.view.prefix=/view/

# Suffix for JSP view files (file extension)
 spring.mvc.view.suffix=.jsp

# URL matching strategy for path patterns (using Ant-style path patterns)
 spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Prevent the  session(Hibernate) from being kept open during view rendering 
 spring.jpa.open-in-view=false

# --------------------------------------
# DATABASE CONFIGURATION
# --------------------------------------

# PostgreSQL configuration
 spring.datasource.url=${DATABASE_URL}
 spring.datasource.username=${DATABASE_USER_NAME}
 spring.datasource.password=${DATABASE_USER_PASSWORD}
 spring.datasource.driver-class-name=org.postgresql.Driver

# --------------------------------------
# HIBERNATE CONFIGURATION
# --------------------------------------

# Hibernate property to update the schema automatically based on entity mappings
 spring.jpa.hibernate.ddl-auto=update

#handle LOBs outside of the context of a Hibernate session.
 spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# --------------------------------------
# LOGGING CONFIGURATION
# --------------------------------------

# Enable DEBUG logging for Spring's DispatcherServlet to track request handling
 logging.level.org.springframework.web.servlet.DispatcherServlet=ERROR

# Enable DEBUG logging for Spring Security to troubleshoot security-related issues
 logging.level.org.springframework.security=DEBUG

# Enable DEBUG logging for Spring Web to troubleshoot web-related issues
 logging.level.org.springframework.web=DEBUG

# --------------------------------------
# ERROR HANDLING CONFIGURATION
# --------------------------------------

# Throw an exception if no handler is found for a request
 spring.mvc.throwExceptionIfNoHandlerFound=true

# Disable the default Whitelabel error page
 server.error.whitelabel.enabled=false

# --------------------------------------
# ACTUATOR CONFIGURATION
# --------------------------------------

# Enable all endpoints
 management.endpoints.web.exposure.include=*

 management.endpoint.metrics.enabled=true

# --------------------------------------
# CACHE CONFIGURATION
# --------------------------------------

# Set the logging level for Spring's cache interactions
 logging.level.org.springframework.cache=DEBUG

 
 # Format SQL output for readability
 spring.jpa.properties.hibernate.format_sql=true

# Display SQL queries in the console for tracking database interactions
 spring.jpa.show-sql=true

# Highlight SQL in the logs for easier identification
 spring.jpa.properties.hibernate.highlight_sql=true
 
 # Enable DEBUG logging for caching operations
logging.level.com.github.benmanes.caffeine.cache=DEBUG
 
 # Enable DEBUG logging for Spring Cache
logging.level.org.springframework.cache=DEBUG
 